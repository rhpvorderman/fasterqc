# This file contains subsequences of common adapters
# Keep in mind that the implementation stores adapters in a 64-bit word so
# the runtime increases when the combined length of the adapters exceeds
# 64. For this reason length 12 is chosen, so we can fit 5 adapters in a
# single word.

Illumina Universal Adapter	illumina	AGATCGGAAGAG
Illumina Small RNA 3' adapter	illumina	TGGAATTCTCGG
Illumina Small RNA 5' adapter	illumina	GATCGTCGGACT
Nextera Transposase Sequence	illumina	CTGTCTCTTATA
PolyG	illumina	GGGGGGGGGGGG

PolyA	illumina	AAAAAAAAAAAA

Oxford nanopore cDNA RT Adapter (CRT)	nanopore	CTTGCGGGCGGC
Oxford nanopore strand switching primer (SSP or SSPII) or CDNA primer, reverse sequence	nanopore	TTTCTGTTGGTG
Oxford nanopore RT primer, VN primer, or CDNA primer, forward sequence	nanopore	CTTGCCTGTCGC
Oxford nanopore ligation kit, rapid adapter or Adapter Mix (AMX); all top strand	nanopore	TGTACTTCGTTC
Oxford nanopore ligation kit or Adapter Mix; both bottom strand	nanopore	GCAATACGTAAC
Oxford nanopore RT adapter (RTA) or RNA adapter mix (RMX); both bottom strand	nanopore	GAGGCGAGCGGT
# Use TTTTTTTTTTTAT rather than TTTTTTTTTTTT to avoid double hit for VN primer.
Oxford nanopore RNA Adapter Mix (RMX); top strand	nanopore	TTTTTTTTTTTAT
OXford nanopore RT Adapter (RTA); top strand	nanopore	GGCTTCTTCTTG



# Most common subsequences for nanopore found with the following code:

# from collections import defaultdict
#
# from sequali.util import fasta_parser
#
#
# if __name__ == "__main__":
#     k = 12
#     kmers_and_names = defaultdict(set)
#     for name, sequence in fasta_parser("src/sequali/contaminants/oxford_nanopore.fasta"):
#         number_of_kmers = len(sequence) + 1 - k
#         for i in range(number_of_kmers):
#             kmer = sequence[i:i+k]
#             kmers_and_names[kmer].add(name)
#     items = list(kmers_and_names.items())
#     items.sort(key=lambda x: len(x[1]), reverse=True)
#     for kmer, names in items:
#         if len(names) == 1:
#             continue
#         print(f"{kmer}: {', '.join(names)}")
